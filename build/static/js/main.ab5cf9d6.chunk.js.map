{"version":3,"sources":["components/AddContact/index.js","components/EditContact/index.js","components/Home/index.js","components/Navbar/index.js","App.js","redux/reducers/contactReducer.js","index.js"],"names":["connect","state","contacts","dispatch","addContact","data","type","payload","useState","name","setName","email","setEmail","phone","setPhone","history","useHistory","className","onSubmit","e","preventDefault","checkContactEmailExists","filter","contact","checkContactPhoneExists","toast","warning","length","error","id","success","push","placeholder","value","onChange","target","updateContact","useParams","currentContact","find","parseInt","useEffect","onClick","deleteContact","to","scope","map","Navbar","App","exact","path","component","initialState","store","createStore","action","contactFilter","contactUpdate","Object","assign","composeWithDevTools","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.ab5cf9d6.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst AddPost = ({ contacts, addContact }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const checkContactEmailExists = contacts.filter((contact) =>\r\n      contact.email === email ? contact : null\r\n    );\r\n    const checkContactPhoneExists = contacts.filter((contact) =>\r\n      contact.phone === phone ? contact : null\r\n    );\r\n\r\n    if (!email || !name || !phone) {\r\n      return toast.warning(\"Please fill in all fields!!\");\r\n    }\r\n    if (checkContactEmailExists.length > 0) {\r\n      return toast.error(\"This email already exists!!\");\r\n    }\r\n    if (checkContactPhoneExists.length > 0) {\r\n      return toast.error(\"This phone number already exists!!\");\r\n    }\r\n\r\n    const data = {\r\n      id: contacts.length > 0 ? contacts[contacts.length - 1].id + 1 : 0,\r\n      email,\r\n      name,\r\n      phone,\r\n    };\r\n\r\n    addContact(data);\r\n    toast.success(\"Contact added successfully!!\");\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <h1 className=\"text-center text-dark py-3 display-2\">Add Post</h1>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 p-5 mx-auto shadow\">\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"form-group\">\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                placeholder=\"Full name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"email\"\r\n                placeholder=\"Email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"number\"\r\n                placeholder=\"Phone\"\r\n                value={phone}\r\n                onChange={(e) => setPhone(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                className=\"btn btn-block btn-dark\"\r\n                type=\"submit\"\r\n                value=\"Add Student\"\r\n              />\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: state,\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addContact: (data) => {\r\n    dispatch({ type: \"ADD_CONTACT\", payload: data });\r\n  },\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddPost);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst EditContact = ({ contacts, updateContact }) => {\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n  const currentContact = contacts.find(\r\n    (contact) => contact.id === parseInt(id)\r\n  );\r\n\r\n  useEffect(() => {\r\n    setName(currentContact.name);\r\n    setEmail(currentContact.email);\r\n    setPhone(currentContact.phone);\r\n  }, [currentContact]);\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const checkContactEmailExists = contacts.filter((contact) =>\r\n      contact.email === email && contact.id !== currentContact.id\r\n        ? contact\r\n        : null\r\n    );\r\n    const checkContactPhoneExists = contacts.filter((contact) =>\r\n      contact.phone === phone && contact.id !== currentContact.id\r\n        ? contact\r\n        : null\r\n    );\r\n\r\n    if (!email || !name || !phone) {\r\n      return toast.warning(\"Please fill in all fields!!\");\r\n    }\r\n    if (checkContactEmailExists.length > 0) {\r\n      return toast.error(\"This email already exists!!\");\r\n    }\r\n    if (checkContactPhoneExists.length > 0) {\r\n      return toast.error(\"This phone number already exists!!\");\r\n    }\r\n\r\n    const data = {\r\n      id: currentContact.id,\r\n      email,\r\n      name,\r\n      phone,\r\n    };\r\n\r\n    updateContact(data);\r\n    toast.success(\"Contact updated successfully!!\");\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row d-flex flex-column\">\r\n        <button\r\n          className=\"btn btn-dark ml-auto my-5\"\r\n          onClick={() => history.push(\"/\")}\r\n        >\r\n          Go back\r\n        </button>\r\n        <div className=\"col-md-6 mx-auto shadow p-5\">\r\n          {currentContact ? (\r\n            <form onSubmit={handleSubmit}>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  className=\"form-control\"\r\n                  value={name}\r\n                  placeholder={\"Name\"}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  className=\"form-control\"\r\n                  value={email}\r\n                  placeholder={\"Email\"}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  className=\"form-control\"\r\n                  value={phone}\r\n                  placeholder={\"Phone\"}\r\n                  onChange={(e) => setPhone(e.target.value)}\r\n                />\r\n              </div>\r\n              <div className=\"form-group d-flex align-items-center justify-content-between my-2\">\r\n                <button type=\"submit\" className=\"btn btn-primary\">\r\n                  Update Contact\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-danger\"\r\n                  onClick={() => history.push(\"/\")}\r\n                >\r\n                  cancel\r\n                </button>\r\n              </div>\r\n            </form>\r\n          ) : (\r\n            <h1 className=\"text-center\">No Contact Found</h1>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: state,\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  updateContact: (data) => {\r\n    dispatch({ type: \"UPDATE_CONTACT\", payload: data });\r\n  },\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditContact);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Home = ({ contacts, deleteContact }) => {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row d-flex flex-column\">\r\n        <Link to=\"/add\" className=\"btn btn-outline-dark my-5 ml-auto \">\r\n          Add Contact\r\n        </Link>\r\n        <div className=\"col-md-10 mx-auto my-4\">\r\n          <table className=\"table table-hover\">\r\n            <thead className=\"table-header bg-dark text-white\">\r\n              <tr>\r\n                <th scope=\"col\">Id</th>\r\n                <th scope=\"col\">Name</th>\r\n                <th scope=\"col\">Email</th>\r\n                <th scope=\"col\">Phone</th>\r\n                <th scope=\"col\"></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {contacts.length > 0 ? (\r\n                contacts.map((contact, id) => (\r\n                  <tr key={id}>\r\n                    <td>{id + 1}</td>\r\n                    <td>{contact.name}</td>\r\n                    <td>{contact.email}</td>\r\n                    <td>{contact.phone}</td>\r\n                    <td>\r\n                      <Link\r\n                        to={`/edit/${contact.id}`}\r\n                        className=\"btn btn-sm btn-primary mr-1\"\r\n                      >\r\n                        Edit\r\n                      </Link>\r\n                      <button\r\n                        type=\"button\"\r\n                        onClick={() => deleteContact(contact.id)}\r\n                        className=\"btn btn-sm btn-danger\"\r\n                      >\r\n                        Delete\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                ))\r\n              ) : (\r\n                <tr>\r\n                  <th>No contacts found</th>\r\n                </tr>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: state,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  deleteContact: (id) => {\r\n    dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n  },\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <div className=\"col-md-12 bg-dark py-2\">\r\n      <nav className=\"navbar bg-dark navbar-dark\">\r\n        <Link to={\"/\"} className=\"navbar-brand ml-5\">\r\n          React Redux Contact Book\r\n        </Link>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport AddPost from \"./components/AddContact\";\r\nimport EditContact from \"./components/EditContact\";\r\nimport Home from \"./components/Home\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport \"./styles.css\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"App\">\r\n      <ToastContainer />\r\n      <Navbar />\r\n      <Route exact path=\"/\" component={() => <Home />} />\r\n      <Route exact path=\"/add\" component={() => <AddPost />} />\r\n      <Route exact path=\"/edit/:id\" component={() => <EditContact />} />\r\n    </div>\r\n  );\r\n};\r\nexport default App;\r\n","const initialState = [\r\n  { id: 0, name: \"Raman Sharma\", email: \"email@email.com\", phone: 1234567890 },\r\n  { id: 1, name: \"Test Name\", email: \"test@test.com\", phone: 4567891230 },\r\n];\r\n\r\nexport const contactReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_CONTACT\":\r\n      state = [...state, action.payload];\r\n      return state;\r\n    case \"DELETE_CONTACT\":\r\n      const contactFilter = state.filter((contact) =>\r\n        contact.id === action.payload ? null : contact\r\n      );\r\n      state = contactFilter;\r\n      return state;\r\n    case \"UPDATE_CONTACT\":\r\n      const contactUpdate = state.filter((contact) =>\r\n        contact.id === action.payload.id\r\n          ? Object.assign(contact, action.payload)\r\n          : contact\r\n      );\r\n      state = contactUpdate;\r\n      return state;\r\n    case \"RESET_CONTACT\":\r\n      state = [{ name: null, email: null, phone: null }];\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nimport App from \"./App\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport { createStore } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport { contactReducer } from \"./redux/reducers/contactReducer\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nconst store = createStore(contactReducer, composeWithDevTools());\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </Provider>,\r\n  rootElement\r\n);\r\n"],"sourceRoot":""}